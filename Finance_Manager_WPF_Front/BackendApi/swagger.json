{
  "openapi": "3.0.4",
  "info": {
    "title": "Finance_Manager_Backend",
    "version": "1.0"
  },
  "paths": {
    "/api/Administrator/{id}": {
      "get": {
        "tags": [
          "Administrator"
        ],
        "summary": "Get category by id.",
        "operationId": "GetCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not found category.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Administrator"
        ],
        "summary": "Delete category by id.",
        "operationId": "DeleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found category.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Administrator/seed": {
      "post": {
        "tags": [
          "Administrator"
        ],
        "summary": "Create all categories and seed them in data base.",
        "operationId": "CreateAllCategories",
        "responses": {
          "204": {
            "description": "Success."
          },
          "403": {
            "description": "Authorization failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Administrator/create": {
      "post": {
        "tags": [
          "Administrator"
        ],
        "summary": "Create category.",
        "operationId": "CreateCategory",
        "requestBody": {
          "description": "CategoryDTO to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Administrator": {
      "put": {
        "tags": [
          "Administrator"
        ],
        "summary": "Update category.",
        "operationId": "UpdateCategory",
        "requestBody": {
          "description": "New categoryDTO object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "isIncome",
                  "icon",
                  "colorForBackground"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/overview": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get spending analytics in date range.",
        "operationId": "GetAnalytics",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "maxDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPercentDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPercentDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPercentDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/inner_categories": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get spending analytics from general category in date range.",
        "operationId": "GetInnerAnalytics",
        "parameters": [
          {
            "name": "parentCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "maxDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPercentDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPercentDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPercentDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user.",
        "operationId": "Register",
        "requestBody": {
          "description": "AuthDataDTO with email and password",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/authenticate": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticate user.",
        "operationId": "Authenticate",
        "requestBody": {
          "description": "AuthDataDTO with email and password",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthDataDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticate user with refresh token.",
        "operationId": "RefreshToken",
        "requestBody": {
          "description": "Refresh token.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokensDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User with this token not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by id.",
        "operationId": "GetCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not found category.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get list of all categories.",
        "operationId": "GetAllCategories",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Savings": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Create saving.",
        "operationId": "CreateSaving",
        "requestBody": {
          "description": "The savingDTO to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "goal",
                  "currentAmount",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "goal",
                  "currentAmount",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "goal",
                  "currentAmount",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "goal",
                  "currentAmount",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Saving successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get list of savings.",
        "operationId": "GetSavings",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "previousSavingId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SavingDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SavingDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SavingDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Savings"
        ],
        "summary": "Update saving with new top up.",
        "operationId": "UpdateSaving",
        "requestBody": {
          "description": "TopUpDTO with parameters:\r\n            savingId - Saving id;\r\n            topUpAmount - Amount of top up.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "savingId",
                  "topUpAmount"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingTopUpDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "savingId",
                  "topUpAmount"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingTopUpDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "savingId",
                  "topUpAmount"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingTopUpDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "savingId",
                  "topUpAmount"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavingTopUpDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Savings/{id}": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get saving by id.",
        "operationId": "GetSaving",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Saving id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SavingDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavingDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavingDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not found saving.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Savings"
        ],
        "summary": "Delete saving by id.",
        "operationId": "DeleteSaving",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Saving id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Not found saving.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create transaction.",
        "operationId": "CreateTransaction",
        "requestBody": {
          "description": "The transactionDTO to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get list of transactions.",
        "operationId": "GetTransactions",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lastDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update transaction with new data.",
        "operationId": "UpdateTransaction",
        "requestBody": {
          "description": "New transactionDTO object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "id",
                  "name",
                  "price",
                  "date",
                  "categoryId",
                  "userId"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction by id.",
        "operationId": "GetTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not found transaction.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete transaction by id.",
        "operationId": "DeleteTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Not found transaction.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user balance by id.",
        "operationId": "GetBalance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not found user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user currency.",
        "operationId": "UpdateCurrency",
        "requestBody": {
          "description": "currencyQueryDTO with parameters:\r\n            UserId - user id;\r\n            CurrencyRang - rang of currency that will be update, can be \"Primary\", \"Secondary1\" or \"Secondary2\".\r\n            CurrencyCode - code for this currency.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "required": [
                  "userId",
                  "currencyRang",
                  "currencyCode"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserCurrencyQueryDTO"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "userId",
                  "currencyRang",
                  "currencyCode"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserCurrencyQueryDTO"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "required": [
                  "userId",
                  "currencyRang",
                  "currencyCode"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserCurrencyQueryDTO"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "required": [
                  "userId",
                  "currencyRang",
                  "currencyCode"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserCurrencyQueryDTO"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Validation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found some resource.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized. Possible invalid token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthDataDTO": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthUserTokensDTO": {
        "required": [
          "accessJwtToken",
          "refreshToken",
          "userDTO"
        ],
        "type": "object",
        "properties": {
          "userDTO": {
            "required": [
              "id",
              "email",
              "balance"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDTO"
              }
            ]
          },
          "accessJwtToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CategoryDTO": {
        "required": [
          "colorForBackground",
          "icon",
          "id",
          "isIncome",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isIncome": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "colorForBackground": {
            "type": "string"
          },
          "parentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "innerCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryPercentDTO": {
        "required": [
          "categoryDTO",
          "percent"
        ],
        "type": "object",
        "properties": {
          "categoryDTO": {
            "required": [
              "id",
              "name",
              "isIncome",
              "icon",
              "colorForBackground"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            ]
          },
          "percent": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CurrencyBalanceDTO": {
        "required": [
          "balance",
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "decimal"
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavingDTO": {
        "required": [
          "currentAmount",
          "goal",
          "id",
          "name",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "goal": {
            "type": "number",
            "format": "decimal"
          },
          "currentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SavingTopUpDTO": {
        "required": [
          "savingId",
          "topUpAmount"
        ],
        "type": "object",
        "properties": {
          "savingId": {
            "type": "integer",
            "format": "int32"
          },
          "topUpAmount": {
            "type": "number",
            "format": "decimal"
          }
        },
        "additionalProperties": false
      },
      "TransactionDTO": {
        "required": [
          "categoryId",
          "date",
          "id",
          "name",
          "price",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "innerCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserCurrencyQueryDTO": {
        "required": [
          "currencyCode",
          "currencyRang",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "currencyRang": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserBalanceDTO": {
        "required": [
          "primaryBalance"
        ],
        "type": "object",
        "properties": {
          "primaryBalance": {
            "required": [
              "currency",
              "balance"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyBalanceDTO"
              }
            ]
          },
          "secondaryBalance1": {
            "required": [
              "currency",
              "balance"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyBalanceDTO"
              }
            ],
            "nullable": true
          },
          "secondaryBalance2": {
            "required": [
              "currency",
              "balance"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyBalanceDTO"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDTO": {
        "required": [
          "balance",
          "email",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "decimal"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter JWT token in format: Bearer {token}",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}